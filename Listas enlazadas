class Nodo():
    """
    dato = numeros, objetos, palabras, etc
    siguiente = a el siguiente Nodo
    """
    def __init__(self, dato):
        self.dato= dato
        self.siguiente = None
    
    def get_dato(self):
        return self.dato

    def set_dato(self, nuevo_dato):
        self.dato = nuevo_dato

    def get_siguiente(self):
        return self.siguiente

    def set_siguiente(self, nuevo_siguiente):
        self.siguiente = nuevo_siguiente
    
from nodo import Nodo
class ListaEnlazada():
    def __init__(self):
        self.primero=None
        self.ultimo =None

    def get_primero(self):
        return self.primero

    def set_primero(self, nuevo_primero):
        self.primero = nuevo_primero

    def get_ultimo(self):
        return self.ultimo

    def set_ultimo(self, nuevo_ultimo):
        self.ultimo = nuevo_ultimo
    
    def insertarNodo(self, dato):
        nodoNuevo = Nodo(dato)
        if self.get_primero() == None:
            self.primero = nodoNuevo
            self.primero.set_siguiente(None)
            self.ultimo = self.primero
            print("inserte bien 1")
        else:
            self.ultimo.set_siguiente(nodoNuevo)
            nodoNuevo.set_siguiente(None)
            self.ultimo=nodoNuevo
            print("inserte bien 2")

    def mostrarLista(self):
        nodoActual = self.primero
        listaString = ""
        while nodoActual != None:
            listaString = listaString + str(nodoActual.get_dato()) + "\n"
            nodoActual = nodoActual.get_siguiente()
        return listaString

    def buscarNodo(self, dato):
        nodoActual = self.primero
        encontrado= False
        while nodoActual != None:
            if nodoActual.get_dato() == dato:
               encontrado = True
            nodoActual = nodoActual.get_siguiente()
        return encontrado
    
    def modificarNodo(self):
        numero= int(input("Digite el número que desea buscar:"))
        nodoActual = self.primero
        modificado= False
        while nodoActual != None:
            if nodoActual.get_dato() == numero:
                nuevoNumero = int(input("Digite el NUEVO número que desea:"))
                nodoActual.set_dato(nuevoNumero)
                modificado = True
            nodoActual = nodoActual.get_siguiente()
        return modificado
    
    def eliminarNodo(self):
        numero= int(input("Digite el número que desea eliminar:"))
        nodoActual = self.primero

        if nodoActual is not None and nodoActual.get_dato() == numero:
            self.primero = nodoActual.get_siguiente()
            nodoActual = None
            return

        anterior = None
        while nodoActual is not None and nodoActual.get_dato() != numero:
            anterior = nodoActual
            nodoActual = nodoActual.get_siguiente()

        if nodoActual is None:
            return

        anterior.set_siguiente(nodoActual.get_siguiente())
        nodoActual = None
        



from lista_enlazadas import ListaEnlazada
miLista = ListaEnlazada()
numero = 0
opcion = 0

while opcion != 6:

    opcion= int(input("Digite la opción que requiera: \n"
                      "1.Ingresar \n"
                      "2.Mostrar \n"
                      "3.Buscar \n" 
                      "4.Modificar \n"
                      "5.Eliminar \n"
                      "6.Salir\n:"))
    match opcion:
        case 1: 
            numero= int(input("Digite el número que desea inserta:"))
            miLista.insertarNodo(numero)
        case 2:
            print(miLista.mostrarLista())
        case 3:
            numero= int(input("Digite el número que desea buscar:"))
            if (miLista.buscarNodo(numero)):
                print("Número encontrado")

            else:
                print("El número no se encuentra en la lista")
            
        case 4:
            miLista.modificarNodo()
            
        case 5:
            miLista.eliminarNodo()
        case 6:
            print("Saliendo del programa...")

        case _:
            print ("Opción inválida")


