class Nodo:
    def __init__(self, valor):
        self.valor = valor
        self.izquierdo = None
        self.derecho = None

class ArbolBinario:
    def __init__(self):
        self.raiz = None

    def agregar(self, valor):
        if self.raiz is None:
            self.raiz = Nodo(valor)
        else:
            self._agregar_recursivo(valor, self.raiz)

    def _agregar_recursivo(self, valor, nodo_actual):
        if valor < nodo_actual.valor:
            if nodo_actual.izquierdo is None:
                nodo_actual.izquierdo = Nodo(valor)
            else:
                self._agregar_recursivo(valor, nodo_actual.izquierdo)
        else:
            if nodo_actual.derecho is None:
                nodo_actual.derecho = Nodo(valor)
            else:
                self._agregar_recursivo(valor, nodo_actual.derecho)

    def in_order_traversal(self):
        self._in_order_traversal_recursivo(self.raiz)

    def _in_order_traversal_recursivo(self, nodo_actual):
        if nodo_actual is not None:
            self._in_order_traversal_recursivo(nodo_actual.izquierdo)
            print(nodo_actual.valor)
            self._in_order_traversal_recursivo(nodo_actual.derecho)

    def buscar(self, valor):
        return self._buscar(self.raiz, valor)

    def _buscar(self, nodo, busqueda):
        if nodo is None:
            return False
        if nodo.valor == busqueda:
            return True
        if busqueda < nodo.valor:
            return self._buscar(nodo.izquierdo, busqueda)
        else:
            return self._buscar(nodo.derecho, busqueda)

    def eliminar(self, valor):
        self.raiz = self._eliminar_recursivo(self.raiz, valor)

    def _eliminar_recursivo(self, nodo, valor):
        if nodo is None:
            return nodo
        if valor < nodo.valor:
            nodo.izquierdo = self._eliminar_recursivo(nodo.izquierdo, valor)
        elif valor > nodo.valor:
            nodo.derecho = self._eliminar_recursivo(nodo.derecho, valor)
        else:
            if nodo.izquierdo is None:
                return nodo.derecho
            elif nodo.derecho is None:
                return nodo.izquierdo
            min_larger_node = self._min_value_node(nodo.derecho)
            nodo.valor = min_larger_node.valor
            nodo.derecho = self._eliminar_recursivo(nodo.derecho, min_larger_node.valor)
        return nodo

    def _min_value_node(self, nodo):
        current = nodo
        while current.izquierdo is not None:
            current = current.izquierdo
        return current

    def modificar(self, valor_viejo, valor_nuevo):
        if self.buscar(valor_viejo):
            self.eliminar(valor_viejo)
            self.agregar(valor_nuevo)
            return True
        else:
            return False

    def preorden(self):
        self._preorden_recursivo(self.raiz)

    def _preorden_recursivo(self, nodo_actual):
        if nodo_actual is not None:
            print(nodo_actual.valor)
            self._preorden_recursivo(nodo_actual.izquierdo)
            self._preorden_recursivo(nodo_actual.derecho)

if __name__ == "__main__":
    arbol = ArbolBinario()
    bandera = True

    while bandera:
        print("\nMenú:")
        print("1. Agregar valor")
        print("2. Buscar valor")
        print("3. Eliminar valor")
        print("4. Modificar valor")
        print("5. Mostrar in-order traversal")
        print("6. Mostrar pre-order traversal")
        print("7. Salir")
        opcion = input("Ingrese una opción: ")

        if opcion == "1":
            valor = int(input("Ingrese el valor a agregar: "))
            arbol.agregar(valor)
        elif opcion == "2":
            valor = int(input("Ingrese el valor a buscar: "))
            if arbol.buscar(valor):
                print(f"El valor {valor} está en el árbol.")
            else:
                print(f"El valor {valor} no está en el árbol.")
        elif opcion == "3":
            valor = int(input("Ingrese el valor a eliminar: "))
            arbol.eliminar(valor)
            print(f"El valor {valor} ha sido eliminado del árbol.")
        elif opcion == "4":
            valor_viejo = int(input("Ingrese el valor a modificar: "))
            valor_nuevo = int(input("Ingrese el nuevo valor: "))
            if arbol.modificar(valor_viejo, valor_nuevo):
                print(f"El valor {valor_viejo} ha sido modificado a {valor_nuevo}.")
            else:
                print(f"El valor {valor_viejo} no se encontró en el árbol.")
        elif opcion == "5":
            print("In-order traversal del árbol:")
            arbol.in_order_traversal()
        elif opcion == "6":
            print("Pre-order traversal del árbol:")
            arbol.preorden()
        elif opcion == "7":
            bandera = False
        else:
            print("Opción inválida. Intente nuevamente.")
